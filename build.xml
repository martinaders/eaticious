<?xml version="1.0" encoding="utf-8" ?>
<project name="EaternityRechner" default="build" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<!-- Configure path to GWT SDK -->
	<property name="gwt.sdk" location="../.." />
	<!-- Configure path to App Engine SDK -->
	<property name="appengine.sdk" location="../.." />

	<target name="dependencies">
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/2.3.0/ivy-2.3.0.jar" dest=".ivy.jar" skipexisting="true"/>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath=".ivy.jar"/>
		<ivy:cachepath organisation="junit" module="junit" revision="4.11" pathid="lib.junit" inline="true" log="quiet"/>
		<ivy:cachepath organisation="com.google.gwt.google-apis" module="gwt-maps" revision="1.0.4" pathid="lib.gwt-maps" inline="true" log="quiet"/>
		<ivy:cachepath organisation="com.google.gwt" module="gwt-servlet" revision="2.5.1" pathid="lib.gwt-servlet" inline="true" log="quiet"/>
		<ivy:cachepath organisation="com.vaadin" module="vaadin-shared" revision="7.0.6" pathid="lib.vaadin-shared" inline="true" log="quiet"/>
		<ivy:cachepath organisation="com.github.gwtbootstrap" module="gwt-bootstrap" revision="2.2.1.0" pathid="lib.gwt-bootstrap" inline="true" log="quiet"/>
		<ivy:cachepath organisation="com.google.appengine" module="appengine-api-1.0-sdk" revision="1.8.0" pathid="lib.appengine-api" inline="true" log="quiet"/>
		<ivy:cachepath organisation="com.googlecode.objectify" module="objectify" revision="4.0rc1" pathid="lib.objectify" inline="true" log="quiet"/>
		<ivy:cachepath organisation="com.allen-sauer.gwt.log" module="gwt-log" revision="3.2.1" pathid="lib.gwt-log" inline="true" log="quiet"/>
		<ivy:cachepath organisation="commons-fileupload" module="commons-fileupload" revision="1.3" pathid="lib.commons-fileupload" inline="true" log="quiet"/>
<!--		<ivy:cachepath organisation="com.googlecode.gwtupload" module="gwtupload-gae" revision="0.6" pathid="lib.gwt-upload" inline="true" log="quiet"/>-->
		<get src="http://search.maven.org/remotecontent?filepath=com/googlecode/gwtupload/gwtupload/0.6/gwtupload-0.6.jar" dest=".gwtup.jar" usetimestamp="true"/>
	</target>

	<path id="project.class.path">
		<path refid="lib.vaadin-shared" />
		<path refid="lib.gwt-bootstrap" />
		<path refid="lib.gwt-maps" />
		<path refid="lib.appengine-api" />
		<path refid="lib.objectify" />
		<path refid="lib.gwt-log" />
		<path refid="lib.commons-fileupload" />
		<pathelement location=".gwtup.jar" />
		<pathelement location="war/WEB-INF/classes" />
		<pathelement location="${gwt.sdk}/gwt-user.jar" />
		<fileset dir="${gwt.sdk}" includes="gwt-dev*.jar" />
		<!-- Add any additional non-server libs (such as JUnit) -->
		<fileset dir="war/WEB-INF/lib" includes="**/*.jar" />
	</path>

	<path id="tools.class.path">
		<path refid="project.class.path" />
		<pathelement location="${appengine.sdk}/lib/appengine-tools-api.jar" />
		<fileset dir="${appengine.sdk}/lib/tools">
			<include name="**/asm-*.jar" />
			<include name="**/datanucleus-enhancer-*.jar" />
		</fileset>
	</path>

	  <target name="libs.maps" description="Copy gwt-maps.jar to WEB-INF/lib">
	    <mkdir dir="war/WEB-INF/lib" />
		<copy todir="war/WEB-INF/lib">
			<path refid="lib.gwt-maps" />
		</copy>
	  </target>
	
	<target name="libs" depends="libs.maps" description="Copy libs to WEB-INF/lib">
		<mkdir dir="war/WEB-INF/lib" />
		<copy todir="war/WEB-INF/lib">
			<path refid="lib.gwt-servlet"/>
		</copy>
		<!-- Add any additional server libs that need to be copied -->
<!--	    <copy todir="war/WEB-INF/lib" flatten="true">
	      <fileset dir="${appengine.sdk}/lib/user" includes="**/*.jar"/>
	    </copy>-->
	</target>

	<target name="javac" depends="libs" description="Compile java source">
		<mkdir dir="war/WEB-INF/classes" />
		<javac srcdir="src" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
			<classpath refid="project.class.path" />
		</javac>
		<copy todir="war/WEB-INF/classes">
			<fileset dir="src" excludes="**/*.java" />
		</copy>
	</target>

	<target name="gwtc" depends="javac" description="GWT compile to JavaScript">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<pathelement location="src" />
				<path refid="project.class.path" />
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xmx256M" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="ch.eaternity.EaternityRechner" />
		</java>
	</target>

	<target name="devmode" depends="javac" description="Run development mode">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
			<classpath>
				<pathelement location="src" />
				<path refid="project.class.path" />
				<path refid="tools.class.path"/>
			</classpath>
			<jvmarg value="-Xmx256M" />
			<arg value="-startupUrl" />
			<arg value="EaternityRechner.html" />
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="-server"/>
			<arg value="com.google.appengine.tools.development.gwt.AppEngineLauncher"/>
			<arg value="ch.eaternity.EaternityRechner" />
		</java>
	</target>

	<target name="eclipse.generate" depends="libs" description="Generate eclipse project">
		<java failonerror="true" fork="true" classname="com.google.gwt.user.tools.WebAppCreator">
			<classpath>
				<path refid="project.class.path" />
			</classpath>
			<arg value="-XonlyEclipse" />
			<arg value="-ignore" />
			<arg value="ch.eaternity.EaternityRechner" />
		</java>
	</target>

	<!--
Test targets suppressed because -junit argument was not specified when running webAppCreator.

  <target name="javac.tests" depends="javac" description="Compiles test code">
    <javac srcdir="test" includes="**" encoding="utf-8"
      source="1.5" target="1.5" nowarn="true"
      debug="true" debuglevel="lines,vars,source">
      <classpath location="path_to_the_junit_jar"/>
      <classpath refid="project.class.path"/>
    </javac>
  </target>
  
  <target name="test.dev" depends="javac.tests" description="Run development mode tests">
    <mkdir dir="reports/htmlunit.dev" />
    <junit fork="yes" printsummary="yes" haltonfailure="yes">
      <jvmarg line="-Xmx256m" />
      <sysproperty key="gwt.args" value="-logLevel WARN" />
      <sysproperty key="java.awt.headless" value="true" />
      <classpath>
        <pathelement location="src" />
        <pathelement location="test" />
        <path refid="project.class.path" />
        <pathelement location="path_to_the_junit_jar" />
      </classpath>
      <batchtest todir="reports/htmlunit.dev" >
        <fileset dir="test" >
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
      <formatter type="plain" />
      <formatter type="xml" />
    </junit>
  </target>

  <target name="test.prod" depends="javac.tests" description="Run production mode tests">
    <mkdir dir="reports/htmlunit.prod" />
    <junit fork="yes" printsummary="yes" haltonfailure="yes">
      <jvmarg line="-Xmx256m" />
      <sysproperty key="gwt.args" value="-prod -logLevel WARN -out www-test" />
      <sysproperty key="java.awt.headless" value="true" />
      <classpath>
        <pathelement location="src" />
        <pathelement location="test" />
        <path refid="project.class.path" />
        <pathelement location="path_to_the_junit_jar" />
      </classpath>
      <batchtest todir="reports/htmlunit.prod" >
        <fileset dir="test" >
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
      <formatter type="plain" />
      <formatter type="xml" />
    </junit>
  </target>

  <target name="test" description="Run development and production mode tests">
    <antcall target="test.dev" />
    <antcall target="test.prod" />
  </target>
-->


	
	<target name="hosted" depends="devmode" description="Run development mode (NOTE: the 'hosted' target is deprecated)" />

	<target name="build" depends="dependencies, gwtc" description="Build this project" />

	<target name="war" depends="build" description="Create a war file">
		<zip destfile="EaternityRechner.war" basedir="war" />
	</target>

	<target name="clean" description="Cleans this project">
		<delete dir="war/WEB-INF/classes" failonerror="false" />
		<delete dir="war/eaternity" failonerror="false" />
	</target>

</project>
